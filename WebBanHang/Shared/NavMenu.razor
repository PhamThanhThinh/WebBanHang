@implements IDisposable
@inject IShoppingCartService ShoppingCartService

<div class="top-row ps-3 navbar navbar-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="">WebBanHang</a>
    <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
      <span class="navbar-toggler-icon"></span>
    </button>
  </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
  <nav class="flex-column">
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"></span> Home
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="counter">
        <span class="oi oi-plus" aria-hidden="true"></span> Counter
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="fetchdata">
        <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="ShoppingCart">
        <span class="oi oi-list-rich" aria-hidden="true"></span> Giỏ Hàng &nbsp; <strong>@shoppingCartItemCount</strong>
      </NavLink>
    </div>
  </nav>
</div>

@code {
  private bool collapseNavMenu = true;

  private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

  private int shoppingCartItemCount = 0;

  private void ToggleNavMenu()
  {
    collapseNavMenu = !collapseNavMenu;
  }

  // hàm khởi tạo khi load navmenu
  protected override void OnInitialized()
  {
    ShoppingCartService.TrangThaiGioHang += ShoppingCartChanged;
  }

  protected void ShoppingCartChanged(int totalQty)
  {
    shoppingCartItemCount = totalQty;
    // load lại dữ liệu trên UI (giao diện người dùng User Interface)
    StateHasChanged();
  }

  void IDisposable.Dispose()
  {
    ShoppingCartService.TrangThaiGioHang -= ShoppingCartChanged;
  }

}
